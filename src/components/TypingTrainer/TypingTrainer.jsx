import React, { useState, useEffect } from 'react';

export default function TypingTrainer() {
  const words = [
    '–ø—Ä–æ–≥—Ä–∞–º–∞', '–∫–æ–º–ø—é—Ç–µ—Ä', '–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞', '–º–∏—à–∞', '–µ–∫—Ä–∞–Ω', '—Ñ–∞–π–ª',
    '–ø–∞–ø–∫–∞', '—ñ–Ω—Ç–µ—Ä–Ω–µ—Ç', '—Å–∞–π—Ç', '–±—Ä–∞—É–∑–µ—Ä', '–∫–æ–¥', '—Ñ—É–Ω–∫—Ü—ñ—è',
    '–∑–º—ñ–Ω–Ω–∞', '–º–∞—Å–∏–≤', '–æ–±\'—î–∫—Ç', '–º–µ—Ç–æ–¥', '–∫–ª–∞—Å', '–∫–æ–º–ø–æ–Ω–µ–Ω—Ç',
    '–∞–ª–≥–æ—Ä–∏—Ç–º', '–ø—Ä–æ—Ü–µ—Å–æ—Ä', '–æ–ø–µ—Ä–∞—Ç–∏–≤–∫–∞', '–ø–∞–º\'—è—Ç—å', '—Å–µ—Ä–≤–µ—Ä', '–º–µ—Ä–µ–∂–∞',
    '–≤–µ–±—Å–∞–π—Ç', '–º–æ–¥–µ–º', '–ø—Ä–æ–≤–∞–π–¥–µ—Ä', '–±–∞–∑–∞', '–¥–∞–Ω—ñ', '—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å',
    '–ª–æ–≥—ñ–∫–∞', '—Å–∏—Å—Ç–µ–º–∞', '–æ–ø–µ—Ä–∞—Ü—ñ—è', '–ø—Ä–æ—Ç–æ–∫–æ–ª', '—Ä–µ–¥–∞–∫—Ç–æ—Ä', '–∫–æ–º–ø—ñ–ª—è—Ç–æ—Ä',
    '–±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞', '—Ç–µ—Ä–º—ñ–Ω–∞–ª', '–∫–æ–Ω—Å–æ–ª—å', '—Ö–æ—Å—Ç–∏–Ω–≥', '–¥–æ–º–µ–Ω', '–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è',
    '–ø—Ä–æ—à–∏–≤–∫–∞', '–≥—Ä–∞—Ñ—ñ–∫–∞', '–≤—ñ–¥–µ–æ–∫–∞—Ä—Ç–∞', '–ø—Ä–æ—î–∫—Ç', '–º–æ–≤–∞', '—Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
    '–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞', '–±–µ–∑–ø–µ–∫–∞', '—Ñ—Ä–µ–π–º–≤–æ—Ä–∫', '—ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—è', '–ø–æ—à—Ç–∞', '–≤–∫–ª–∞–¥–∫–∞',
    '–≥—ñ–ø–µ—Ä–ø–æ—Å–∏–ª–∞–Ω–Ω—è', '—à—Ä–∏—Ñ—Ç', '–∞–¥–º—ñ–Ω', '–ø–∞—Ä–æ–ª—å', '–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á', '–æ–±–ª—ñ–∫–æ–≤–∫–∞',
    '–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞', '–º–æ–±—ñ–ª—å–Ω–∏–π', '–¥–æ–¥–∞—Ç–æ–∫', '—Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è', '–¥–µ–±–∞–≥', '—Ö–µ—à',
    '–∑–∞–ø–∏—Ç', '–≤—ñ–¥–ø–æ–≤—ñ–¥—å', '—Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç', '–ø—Ä–æ–∫—Å—ñ', '–∞–Ω—Ç–∏–≤—ñ—Ä—É—Å', '—Ñ–∞–π–ª–æ–≤–∞',
    '–∫–æ–º–∞–Ω–¥–∞', '–≤–∏–∫–æ–Ω–∞–Ω–Ω—è', '–∫–ª—ñ–∫', '–∫—É—Ä—Å–æ—Ä', '–º–æ–Ω—ñ—Ç–æ—Ä', '–∞–∫–∫–∞—É–Ω—Ç',
    '—Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è', '–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏', '–Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è', '—Å—Ö–æ–≤–∏—â–µ', '–¥–∞–Ω—ñ', '–≤–≤–µ–¥–µ–Ω–Ω—è',
    '–≤–∏–≤–µ–¥–µ–Ω–Ω—è', '—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è', '–æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è', '–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞', '—Ä–æ–±–æ—Ç', '—Å–∫—Ä–∏–ø—Ç',
    '–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è', '–ø–æ—Ç—ñ–∫', '–ø—Ä–æ–≥—Ä–µ—Å', '—Å—Ç–æ—Ä—ñ–Ω–∫–∞', '—Ñ—Ä–µ–π–º', '–∫–æ–¥–µ–∫—Å'
  ];

  const [currentWord, setCurrentWord] = useState('');
  // –°—Ç–∞–Ω –¥–ª—è —Ç–µ–∫—Å—Ç—É, —è–∫–∏–π –≤–≤—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
  const [userInput, setUserInput] = useState('');

  useEffect(() => {
    // –ì–µ–Ω–µ—Ä—É—î –ø–µ—Ä—à–µ —Å–ª–æ–≤–æ
    generateRandomWord();
  }, []); 

  const generateRandomWord = () => {
    const randomIndex = Math.floor(Math.random() * words.length);
    setCurrentWord(words[randomIndex]);
    setUserInput('');
  };

  const handleKeyDown = (e) => {
    if (e.key.length > 1 && e.key !== 'Backspace') return;

    if (e.key === 'Backspace') {
      // –ü—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ Backspace –≤–∏–¥–∞–ª—è—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Å–∏–º–≤–æ–ª —ñ–∑ –≤–≤–µ–¥–µ–Ω–Ω—è
      setUserInput((prev) => prev.slice(0, -1));
    } else {
      // –î–æ–¥–∞—î–º–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç—É –∫–ª–∞–≤—ñ—à—É –¥–æ –≤–≤–µ–¥–µ–Ω–Ω—è
      const newInput = userInput + e.key;
      setUserInput(newInput);

      // –Ø–∫—â–æ –≤–≤–µ–¥–µ–Ω–µ —Å–ª–æ–≤–æ —Å–ø—ñ–≤–ø–∞–¥–∞—î –∑ –ø–æ—Ç–æ—á–Ω–∏–º
      if (newInput === currentWord) {
        setTimeout(() => {
          generateRandomWord();
        }, 500);
      }
    }
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É —Å–ª–æ–≤–∞ –∑ –ø–æ–∑–Ω–∞—á–µ–Ω–Ω—è–º –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö/–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –ª—ñ—Ç–µ—Ä
  const renderWord = () => {
    // –†–æ–∑–±–∏–≤–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ —Å–ª–æ–≤–æ –Ω–∞ –ª—ñ—Ç–µ—Ä–∏
    return currentWord.split('').map((letter, index) => {
      let className = 'letter ';

      if (index < userInput.length) {
        className += userInput[index] === letter ? 'correct' : 'incorrect';
      } else if (index === userInput.length) {
        className += 'current';
      }

      return (
        <span key={index} className={className}>
          {letter}
        </span>
      );
    });
  };

  return (
    <div
      className="typing-trainer"
      tabIndex={0} // –î–æ–∑–≤–æ–ª—è—î —Ñ–æ–∫—É—Å—É–≤–∞—Ç–∏—Å—è –Ω–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ
      onKeyDown={handleKeyDown} 
      style={{ outline: 'none' }} 
    >
      <div className="container">
        <h1>üñ•Ô∏è –¢—Ä–µ–Ω–∞–∂–µ—Ä –î—Ä—É–∫—É</h1>
        
        <div className="instructions">
          <p>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ —Ü—é –æ–±–ª–∞—Å—Ç—å —Ç–∞ –ø–æ—á–Ω—ñ—Ç—å –¥—Ä—É–∫—É–≤–∞—Ç–∏ —Å–ª–æ–≤–æ:</p>
        </div>

        <div className="word-display">
          {renderWord()}
        </div>

        <div className="input-info">
          <p>–í–∞—à –≤–≤—ñ–¥: <span className="user-input">{userInput}</span></p>
          <p>–ü—Ä–æ–≥—Ä–µ—Å: {userInput.length} / {currentWord.length}</p>
        </div>

       
        <div className="stats">
          {userInput === currentWord && (
            <div className="success-message">
              ‚úÖ –í—ñ–¥–º—ñ–Ω–Ω–æ! –ì–µ–Ω–µ—Ä—É—é –Ω–æ–≤–µ —Å–ª–æ–≤–æ...
            </div>
          )}
        </div>
      </div>
    </div>
  );
}